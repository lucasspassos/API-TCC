// <auto-generated />
using System;
using API_Monitoramento;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_Monitoramento.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20200926023435_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_Monitoramento.Models.ResumoUltimaViagem", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("avarias")
                        .HasColumnType("int");

                    b.Property<double>("consumo")
                        .HasColumnType("float");

                    b.Property<string>("destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("distancia")
                        .HasColumnType("float");

                    b.Property<double>("distanciaAbastecimento")
                        .HasColumnType("float");

                    b.Property<double>("notaConducao")
                        .HasColumnType("float");

                    b.Property<string>("origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("proximaRevisao")
                        .HasColumnType("float");

                    b.Property<int?>("resumo_fk_veiculo")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("resumo_fk_veiculo");

                    b.ToTable("resumoUltimaViagem");
                });

            modelBuilder.Entity("API_Monitoramento.Models.Usuario", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigo");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("API_Monitoramento.Models.Veiculo", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("anoFabricacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("veiculo_fk_usuario")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("veiculo_fk_usuario");

                    b.ToTable("veiculo");
                });

            modelBuilder.Entity("API_Monitoramento.Models.ResumoUltimaViagem", b =>
                {
                    b.HasOne("API_Monitoramento.Models.Veiculo", "veiculo")
                        .WithMany()
                        .HasForeignKey("resumo_fk_veiculo");
                });

            modelBuilder.Entity("API_Monitoramento.Models.Veiculo", b =>
                {
                    b.HasOne("API_Monitoramento.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("veiculo_fk_usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
